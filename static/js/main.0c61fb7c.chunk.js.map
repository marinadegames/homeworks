{"version":3,"sources":["p2-homeworks/h2/Affairs.module.css","p2-homeworks/h1/Message.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/InputStyles.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/main404Page.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Rout.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","s","main404Page","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","justInput","e","currentTarget","value","key","errorTextBox","editPen","src","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","InputStyles","SuperButton","red","finalClassName","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","x","y","defaultState","getItem","parse","restoreState","HW6","setValue","undefined","onClick","Junior","JuniorPlus","Message","props","msgBox","avatarBox","avatar","alt","triangleMsgDiv","triangleMsg","tr","msgMain","leftBox","msgNameUser","name","msgText","message","rightBox","time","messageData","HW1","Affair","colorPriority","priority","lowPriority","highPriority","middlePriority","affairBox","id","deleteAffairCallback","deleteAffairBtn","divAffair","affair","divPriority","Affairs","mappedAffairs","data","map","a","_id","setFilter","btnAll","btnHigh","btnMiddle","btnLow","defaultAffairs","HW2","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","totalUsers","inputClass","notError","btnAddName","attention","GreetingContainer","users","addUserCallback","setName","setError","length","alert","console","log","HW3","setUsers","newUsers","v1","SuperCheckbox","onChangeChecked","checkbox","checked","HW4","text","setText","showAlert","setChecked","column","blue","disabled","PreJunior","PATH","Rout","path","element","replace","to","Header","openMenu","setOpenMenu","headerMenu","menuTitle","menuMainOpen","menuMainClose","itemMenu","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,YAAc,6BAA6B,UAAY,2BAA2B,OAAS,wBAAwB,YAAc,6BAA6B,aAAe,8BAA8B,eAAiB,gCAAgC,gBAAkB,iCAAiC,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,0B,iBCA5dD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,UAAY,2BAA2B,OAAS,wBAAwB,YAAc,6BAA6B,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,yBAAyB,eAAiB,gCAAgC,YAAc,+B,kBCAtZD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,UAAY,0BAA0B,aAAe,6BAA6B,cAAgB,8BAA8B,SAAW,2B,mBCArMD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,UAAY,kCAAkC,MAAQ,8BAA8B,aAAe,uC,gBCArND,EAAOC,QAAU,CAAC,UAAY,4BAA4B,UAAY,4BAA4B,MAAQ,wBAAwB,WAAa,+B,iBCA/ID,EAAOC,QAAU,CAAC,cAAgB,qC,gBCAlCD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,gBCA/DD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,IAAM,mB,gBCAxBD,EAAOC,QAAU,CAAC,YAAc,mC,mKCYjBC,MAVf,WACI,OACI,sBAAKC,UAAWC,IAAEC,YAAlB,UACI,sCACA,kDACA,uF,+BCqDGC,EA9C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACWC,GAId,EAJGV,UAIH,EAJcU,eAERC,EAEN,6GAeKC,EAAkB,UAAMX,IAAEQ,MAAR,YAAiBC,GAAgC,IACnEG,EAAsBJ,EAAQR,IAAEa,WAAab,IAAEc,UAErD,OACI,qCACI,mCACIX,KAAM,OACNC,SArBa,SAACW,GACtBX,GACGA,EAASW,GAEZV,GAAgBA,EAAaU,EAAEC,cAAcC,QAkBrCX,WAhBe,SAACS,GACxBT,GAAcA,EAAWS,GAEzBR,GACa,UAAVQ,EAAEG,KACFX,KAYKR,UAAWa,GAEPF,IAER,qBAAKX,UAAWC,IAAEmB,aAAlB,SACKX,GAAS,uBAAOT,UAAWY,EAAlB,SAAuCH,U,iBClD3DY,EAAS,qBAAKC,IAAI,4JA6ETC,EA1D4C,SAAC,GASvD,EAPGC,UAOF,IANEC,EAMH,EANGA,OACAjB,EAKH,EALGA,QACAkB,EAIH,EAJGA,UAEGf,EAEN,8DAC+BgB,oBAAkB,GADjD,mBACMC,EADN,KACgBC,EADhB,OAE8DH,GAAa,GAArEI,EAFN,EAEMA,SAAUC,EAFhB,EAEgBA,cAA6BC,GAF7C,EAE+BhC,UAF/B,yDAsBD,OACI,mCACK4B,EAEO,cAAC,EAAD,aACIJ,WAAS,EACTC,OAnBG,SAACT,GACpBa,GAAY,GAEZJ,GAAUA,EAAOT,IAiBDR,QAzBI,WACpBqB,GAAY,GAEZrB,GAAWA,KAuBKR,UAAWC,IAAEgC,aACTtB,IAGR,+CACIoB,cArBU,SAACf,GAC3Ba,GAAY,GAEZE,GAAiBA,EAAcf,IAmBfhB,UAAWC,IAAES,eAETsB,GAJR,cAKEX,EAEGS,GAAYnB,EAAUO,a,iBC/ChCgB,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKnC,EAGR,EAHQA,UACFW,EAEN,mCACKyB,EAAc,UAAMD,EAAMlC,IAAEkC,IAAMlC,IAAEoC,QAAtB,YAAiCrC,GAErD,OACI,oCACIA,UAAWoC,GACPzB,KCnBT,SAAS2B,EAAanB,EAAaoB,GACtC,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAAQzB,EAAKqB,GAmB9BF,EAAqB,OAAQ,CAACO,EAAG,IAAKC,EAAG,KAflC,SAAyB3B,EAAa4B,GACzC,IAAIR,EAAQQ,EACNP,EAAgBG,aAAaK,QAAQ7B,GACrB,OAAlBqB,IAAwBD,EAAQE,KAAKQ,MAAMT,IAe1BU,CAAwB,OAAQ,CAACL,EAAG,GAAIC,EAAG,ICkBrDK,MApCf,WAAgB,IAAD,EACexB,mBAAiB,IADhC,mBACJT,EADI,KACGkC,EADH,KAWX,OACI,gCACI,uBADJ,cAKI,8BAEI,cAAC,EAAD,CACIlC,MAAOA,EACPZ,aAAc8C,EACd1B,UAAW,CAACI,SAAUZ,OAAQmC,EAAY,qBAGlD,cAAC,EAAD,CAAaC,QAtBR,WACThB,EAAkB,sBAAuBpB,IAqBrC,kBACA,cAAC,EAAD,CAAaoC,QApBL,WACZhB,EAAkB,sBAAuB,IACzCc,EAAS,KAkBL,qBAEA,uBAGA,2BC3BGG,MATf,WACI,OACI,gCACI,wCACA,cAAC,EAAD,QCGGC,MARf,WACI,OACI,8BACI,gD,gBCiCGC,MA5Bf,SAAiBC,GACb,OACI,sBAAK1D,UAAWC,IAAE0D,OAAlB,UACI,qBAAK3D,UAAWC,IAAE2D,UAAlB,SACI,qBAAK5D,UAAWC,IAAE4D,OAAlB,SACI,qBAAKvC,IAAKoC,EAAMG,OAAQC,IAAI,gBAGpC,qBAAK9D,UAAWC,IAAE8D,eAAlB,SACI,qBAAK/D,UAAWC,IAAE+D,gBAKtB,qBAAKhE,UAAWC,IAAEgE,KAClB,sBAAKjE,UAAWC,IAAEiE,QAAlB,UACI,sBAAKlE,UAAWC,IAAEkE,QAAlB,UACI,qBAAKnE,UAAWC,IAAEmE,YAAlB,SAAgCV,EAAMW,OACtC,qBAAKrE,UAAWC,IAAEqE,QAAlB,SAA4BZ,EAAMa,aAEtC,qBAAKvE,UAAWC,IAAEuE,SAAlB,SACKd,EAAMe,cC3BrBC,EACM,qFADNA,EAEI,YAFJA,EAGO,YAHPA,EAII,QA4BKC,MAxBf,WACI,OACI,gCACI,uBADJ,cAMI,cAAC,EAAD,CACId,OAAQa,EACRL,KAAMK,EACNH,QAASG,EACTD,KAAMC,IAGV,uBAGA,2B,gBCsBGE,MAtCf,SAAgBlB,GACZ,IAKImB,EASJ,MARuB,QAAnBnB,EAAMoB,SACND,EAAgB5E,IAAE8E,YACO,SAAnBrB,EAAMoB,SACZD,EAAgB5E,IAAE+E,aACO,WAAnBtB,EAAMoB,WACZD,EAAgB5E,IAAEgF,gBAIlB,sBAAKjF,UAAWC,IAAEiF,UAAlB,UAEI,wBAAQ5B,QAAS,kBAjBD6B,EAiBsBzB,EAAMyB,QAhBhDzB,EAAM0B,qBAAqBD,GADR,IAACA,GAiBkCnF,UAAWC,IAAEoF,gBAA/D,eAEA,qBAAKrF,UAAWC,IAAEqF,UAAlB,SACI,sBAAMtF,UAAWC,IAAEsF,OAAnB,SACA7B,EAAM6B,WAIV,qBAAKvF,UAAWC,IAAEuF,YAAlB,SACI,uBAAOxF,UAAW6E,EAAlB,SACKnB,EAAMoB,iBCIZW,MAhCf,SAAiB/B,GAEb,IAAMgC,EAAgBhC,EAAMiC,KAAKC,KAAI,SAACC,GAAD,OACjC,cAAC,EAAD,CAGIV,GAAIU,EAAEC,IACNP,OAAQM,EAAExB,KACVS,SAAUe,EAAEf,SACZM,qBAAsB1B,EAAM0B,sBAJvBS,EAAEC,QAcf,OACI,gCAEKJ,EAED,wBAAQpC,QAVD,WAAQI,EAAMqC,UAAU,QAUN/F,UAAWC,IAAE+F,OAAtC,iBACA,wBAAQ1C,QAVA,WAAQI,EAAMqC,UAAU,SAUN/F,UAAWC,IAAEgG,QAAvC,kBACA,wBAAQ3C,QAVE,WAAQI,EAAMqC,UAAU,WAUN/F,UAAWC,IAAEiG,UAAzC,oBACA,wBAAQ5C,QAVD,WAAQI,EAAMqC,UAAU,QAUN/F,UAAWC,IAAEkG,OAAtC,qBC5BNC,EAAoC,CACtC,CAACN,IAAK,EAAGzB,KAAM,QAASS,SAAU,QAClC,CAACgB,IAAK,EAAGzB,KAAM,QAASS,SAAU,OAClC,CAACgB,IAAK,EAAGzB,KAAM,QAASS,SAAU,OAClC,CAACgB,IAAK,EAAGzB,KAAM,OAAQS,SAAU,QACjC,CAACgB,IAAK,EAAGzB,KAAM,aAAcS,SAAU,WAwD5BuB,MA5Bf,WAAgB,IAAD,EACmB1E,mBAA4ByE,GAD/C,mBACJE,EADI,KACKC,EADL,OAEiB5E,mBAAqB,OAFtC,mBAEJ6E,EAFI,KAEIT,EAFJ,KAILU,EA5BmB,SAACH,EAA4BE,GAItD,MAAe,SAAXA,EACOF,EAAQE,QAAO,SAACX,GAAD,MAAkC,SAAfA,EAAEf,YAGhC,QAAX0B,EACOF,EAAQE,QAAO,SAACX,GAAD,MAAkC,QAAfA,EAAEf,YAGhC,WAAX0B,EACOF,EAAQE,QAAO,SAACX,GAAD,MAAkC,WAAfA,EAAEf,YAGxCwB,EAYiBI,CAAcJ,EAASE,GAI/C,OACI,gCACI,uBADJ,cAKI,cAAC,EAAD,CACIb,KAAMc,EACNV,UAAWA,EACXX,qBAXiB,SAACU,GAAD,OAAiBS,EAXtB,SAACD,EAA4BR,GACrD,OAAOQ,EAAQE,QAAO,SAACX,GAAD,OAAmBA,EAAEC,MAAQA,KAUMa,CAAaL,EAASR,OAcvE,uBAGA,2B,yBCpCGc,EArB+B,SAAC,GAEzC,IADDvC,EACA,EADAA,KAAMwC,EACN,EADMA,gBAAiBC,EACvB,EADuBA,QAASrG,EAChC,EADgCA,MAAOsG,EACvC,EADuCA,WAGlCC,EAAsB,KAAT3C,EAAcpE,IAAEQ,MAAQR,IAAEgH,SAG7C,OACI,gCAEI,gCACI,uBAAO/F,MAAOmD,EAAMhE,SAAUwG,EAAiB7G,UAAWgH,IAC1D,wBAAQhH,UAAWC,IAAEiH,WAAY5D,QAAS,kBAAMwD,EAAQzC,IAAxD,iBACA,+BAAO0C,OAEX,uBAAO/G,UAAWC,IAAEkH,UAApB,SAAgC1G,QCqB7B2G,EAjCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EAClE3F,mBAAiB,IADiD,mBACnF0C,EADmF,KAC7EkD,EAD6E,OAEhE5F,mBAAiB,IAF+C,mBAEnFlB,EAFmF,KAE5E+G,EAF4E,KAoBpFT,EAAaM,EAAMI,OAEzB,OACI,cAAC,EAAD,CACIpD,KAAMA,EACNwC,gBArBgB,SAAC7F,GACX,KAAVP,GAAgB+G,EAAS,IACzBD,EAAQvG,EAAEC,cAAcC,QAoBpB4F,QAlBQ,SAACzC,GACTA,GACAqD,MAAM,UAAD,OAAWrD,EAAX,MACLiD,EAAgBjD,GAChBkD,EAAQ,MAERI,QAAQC,IAAI,qDACZJ,EAAS,+IAYT/G,MAAOA,EACPsG,WAAYA,K,QCJTc,MA5Bf,WAAgB,IAAD,EACelG,mBAAqB,IADpC,mBACJ0F,EADI,KACGS,EADH,KAWX,OARAH,QAAQC,IAAIP,GASR,gCACI,uBADJ,cAKI,cAAC,EAAD,CAAmBA,MAAOA,EAAOC,gBAZjB,SAACjD,GACrB,IACI0D,EAAQ,CADE,CAACjC,IAAKkC,eAAM3D,KAAMA,IACpB,mBAAgBgD,IAC5BS,EAASC,MAYL,uBAGA,2B,qCCeGE,GArCyC,SAAC,GAUpD,EARG7H,KAQF,IAPEC,EAOH,EAPGA,SACA6H,EAMH,EANGA,gBACAlI,EAKH,EALGA,UAEA8B,GAGH,EAJGpB,cAIH,EAHGoB,UACGnB,EAEN,4FACDgH,QAAQC,IAAIvH,GACZ,IAUMQ,EAAmB,UAAMZ,KAAEkI,SAAR,YAAoBnI,GAAwB,IAErE,OACI,kCACI,mCACII,KAAM,WACNC,SAhBa,SAACW,GAEtB2G,QAAQC,IAAI5G,GACZX,GAAYA,EAASW,GACrBkH,GAAmBA,EAAgBlH,EAAEC,cAAcmH,cACnC/E,IAAbhD,GACCA,EAASW,IAWLhB,UAAWa,GACPF,IAEPmB,GAAY,sBAAM9B,UAAWC,KAAES,cAAnB,SAAmCoB,QCoC7CuG,OA1Ef,WAAgB,IAAD,EACa1G,mBAAiB,IAD9B,mBACJ2G,EADI,KACEC,EADF,KAEL9H,EAAQ6H,EAAO,GAAK,QAEpBE,EAAY,WACV/H,EACAiH,MAAM,gFAENA,MAAMY,IARH,EAYmB3G,oBAAkB,GAZrC,mBAYJyG,EAZI,KAYKK,EAZL,KAeX,OACI,gCACI,uBADJ,cAII,sBAAKzI,UAAWC,IAAEyI,OAAlB,UACI,cAAC,EAAD,CACIxH,MAAOoH,EACPhI,aAAciI,EACd/H,QAASgI,EACT/H,MAAOA,IAIX,cAAC,EAAD,CACIT,UAAWC,IAAE0I,OAKjB,cAAC,EAAD,sBAIA,cAAC,EAAD,CACIxG,KAAG,EACHmB,QAASkF,EAFb,qBAOA,cAAC,EAAD,CAAaI,UAAQ,EAArB,sBAMA,cAAC,GAAD,CACIR,QAASA,EACTF,gBAAiBO,EAFrB,wBAQA,cAAC,GAAD,CAAeL,QAASA,EACT/H,SAhDN,SAACW,GAAD,OAAsCyH,EAAWzH,EAAEC,cAAcmH,eAmD9E,uBAKA,2BCrEL,SAASS,KACZ,OACI,gCACI,4CACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,OCLL,IAAMC,GACG,cADHA,GAED,UAFCA,GAGI,eAkBFC,OAff,WACI,OACI,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAM,IAAKC,QAAS,cAAC,IAAD,CAAUC,SAAO,EAACC,GAAIL,OACjD,cAAC,IAAD,CAAOE,KAAMF,GAAiBG,QAAS,cAACJ,GAAD,MACvC,cAAC,IAAD,CAAOG,KAAMF,GAAaG,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAMF,GAAkBG,QAAS,cAAC,EAAD,MAJ5C,gBAMI,cAAC,IAAD,CAAOD,KAAM,KAAMC,QAAS,cAAC,EAAD,Y,4BCW7BG,OA7Bf,WAAmB,IAAD,EAEkBzH,oBAAkB,GAFpC,mBAEP0H,EAFO,KAEGC,EAFH,KAUd,OACI,sBAAKtJ,UAAWC,KAAEsJ,WACbjG,QAPkB,WACSgG,GAA/BD,IAKD,UAEI,qBAAKrJ,UAAWC,KAAEuJ,UAAlB,kBAEA,sBAAKxJ,UAAWqJ,EAAWpJ,KAAEwJ,aAAexJ,KAAEyJ,cAA9C,UACI,cAAC,KAAD,CAAS1J,UAAWC,KAAE0J,SACbR,GAAIL,GADb,yBAEA,cAAC,KAAD,CAAS9I,UAAWC,KAAE0J,SACbR,GAAIL,GADb,sBAEA,cAAC,KAAD,CAAS9I,UAAWC,KAAE0J,SACbR,GAAIL,GADb,kCCVDc,OAVf,WACI,OACI,gCAEI,cAAC,GAAD,IACA,cAAC,GAAD,QCaGC,OAdf,WACI,OACI,sBAAK7J,UAAWC,IAAE4J,IAAlB,UACI,kDAKA,cAAC,GAAD,QCLQC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCXRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,KAAD,UACI,cAAC,GAAD,QAGRC,SAASC,eAAe,SD8HpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAArK,GACHkH,QAAQlH,MAAMA,EAAM8D,c","file":"static/js/main.0c61fb7c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairBox\":\"Affairs_affairBox__GTV8v\",\"divPriority\":\"Affairs_divPriority__1CSes\",\"divAffair\":\"Affairs_divAffair__3-xNf\",\"affair\":\"Affairs_affair__158lT\",\"lowPriority\":\"Affairs_lowPriority__1haCM\",\"highPriority\":\"Affairs_highPriority__2ujJv\",\"middlePriority\":\"Affairs_middlePriority__1uTR7\",\"deleteAffairBtn\":\"Affairs_deleteAffairBtn__i1icC\",\"btnAll\":\"Affairs_btnAll__2yuWM\",\"btnHigh\":\"Affairs_btnHigh__2VeXR\",\"btnMiddle\":\"Affairs_btnMiddle__27UJE\",\"btnLow\":\"Affairs_btnLow__3oU99\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__gXV4a\",\"msgBox\":\"Message_msgBox__xuLXr\",\"msgMain\":\"Message_msgMain__23oVY\",\"avatarBox\":\"Message_avatarBox__1b0De\",\"avatar\":\"Message_avatar__1sV9o\",\"msgNameUser\":\"Message_msgNameUser__3Kav9\",\"msgText\":\"Message_msgText__q5XDI\",\"rightBox\":\"Message_rightBox__25ZtG\",\"leftBox\":\"Message_leftBox__1BEKZ\",\"triangleMsgDiv\":\"Message_triangleMsgDiv__NoZMG\",\"triangleMsg\":\"Message_triangleMsg__KTq-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerMenu\":\"Header_headerMenu__2DxEp\",\"menuTitle\":\"Header_menuTitle__J3cv0\",\"menuMainOpen\":\"Header_menuMainOpen__2CFrn\",\"menuMainClose\":\"Header_menuMainClose__2AprZ\",\"itemMenu\":\"Header_itemMenu__Ntj_w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1o7bS\",\"errorInput\":\"SuperInputText_errorInput__1hTLm\",\"justInput\":\"SuperInputText_justInput__1raak\",\"error\":\"SuperInputText_error__1RRk-\",\"errorTextBox\":\"SuperInputText_errorTextBox__wfjku\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__1lwe0\",\"attention\":\"Greeting_attention__3nEg6\",\"error\":\"Greeting_error__14BWb\",\"btnAddName\":\"Greeting_btnAddName__357as\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClassName\":\"InputStyles_spanClassName__1O8hG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1q5K_\",\"red\":\"SuperButton_red__3Fisn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2_idT\",\"column\":\"HW4_column__2YlcX\",\"testSpanError\":\"HW4_testSpanError__1ZHFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2CDat\",\"spanClassName\":\"SuperCheckbox_spanClassName__U1HlB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15xuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main404Page\":\"main404Page_main404Page__1dUeD\"};","import React from 'react'\r\nimport s from './main404Page.module.css'\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div className={s.main404Page}>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error404\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = error ? s.errorInput : s.justInput // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            <div className={s.errorTextBox}>\r\n                {error && <small className={finalSpanClassName}>{error}</small>}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\r\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\r\nimport s from './InputStyles.module.css'\r\n\r\nconst editPen =<img src=\"https://img.icons8.com/external-kiranshastry-lineal-color-kiranshastry/32/000000/external-edit-miscellaneous-kiranshastry-lineal-color-kiranshastry.png\"/>\r\n\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n}\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(false) // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter()\r\n    }\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(false) // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e)\r\n    }\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(true) // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e)\r\n    }\r\n\r\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением необязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n                        className={s.InputStyles}\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={s.spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >{editPen}\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperEditableSpan\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) {\r\n    const stateAsString = JSON.stringify(state)\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    let state = defaultState\r\n    const stateAsString = localStorage.getItem(key)\r\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\r\n    return state\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// пример использования:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке 'test'\r\nsaveState<StateType>('test', {x: 'A', y: 1})\r\n\r\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\r\n","import React, {useState} from 'react'\r\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\r\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\r\nimport {restoreState, saveState} from './localStorage/localStorage'\r\n\r\n\r\n\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const save = () => {\r\n        saveState<string>('editable-span-value', value)\r\n    }\r\n    const restore = () => {\r\n        saveState<string>('editable-span-value', '')\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : 'enter text...'}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW6\r\n","import React from 'react'\r\nimport HW6 from \"../../h6/HW6\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            <h3>JUNIOR</h3>\r\n            <HW6/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior","import React from 'react'\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            <h3>JUNIOR PLUS</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JuniorPlus","import React from 'react'\r\nimport s from \"./Message.module.css\";\r\n\r\ntype typePropsMessage = {\r\n    avatar: string,\r\n    name: string,\r\n    message: string,\r\n    time: string,\r\n}\r\n\r\nfunction Message(props: typePropsMessage) {\r\n    return (\r\n        <div className={s.msgBox}>\r\n            <div className={s.avatarBox}>\r\n                <div className={s.avatar}>\r\n                    <img src={props.avatar} alt='userImg'/>\r\n                </div>\r\n            </div>\r\n            <div className={s.triangleMsgDiv}>\r\n                <div className={s.triangleMsg}>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className={s.tr}/>\r\n            <div className={s.msgMain}>\r\n                <div className={s.leftBox}>\r\n                    <div className={s.msgNameUser}>{props.name}</div>\r\n                    <div className={s.msgText}>{props.message}</div>\r\n                </div>\r\n                <div className={s.rightBox}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\n\r\nconst messageData = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Some Name',\r\n    message: 'some text',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HW1\r\n","// imports\r\nimport React from 'react'\r\nimport s from './Affairs.module.css'\r\n\r\n// types\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: string // completed\r\n    priority: string\r\n    id: number\r\n    deleteAffairCallback: (id: number) => void // complete!\r\n}\r\n\r\n//components\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = (id: number) => {\r\n        props.deleteAffairCallback(id)\r\n    }// need to fix\r\n\r\n    //colors\r\n    let colorPriority;\r\n    if (props.priority === 'low'){\r\n        colorPriority = s.lowPriority\r\n    }else if (props.priority === 'high'){\r\n        colorPriority = s.highPriority\r\n    }else if (props.priority === 'middle'){\r\n        colorPriority = s.middlePriority\r\n    }\r\n\r\n    return (\r\n        <div className={s.affairBox} >\r\n\r\n            <button onClick={() => deleteCallback(props.id) } className={s.deleteAffairBtn}>X</button>\r\n\r\n            <div className={s.divAffair}>\r\n                <span className={s.affair}>\r\n               {props.affair}\r\n            </span>\r\n            </div>\r\n\r\n            <div className={s.divPriority}>\r\n                <small className={colorPriority}>\r\n                    {props.priority}\r\n                </small>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","// imports\r\nimport React from 'react'\r\nimport Affair from './Affair'\r\nimport s from './Affairs.module.css'\r\nimport { AffairType, FilterType } from './HW2'\r\n\r\n// types\r\ntype AffairsPropsType = { // complete!\r\n    data: Array<AffairType>\r\n    setFilter: (a: FilterType) => void\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\n//components\r\nfunction Affairs(props: AffairsPropsType) {\r\n\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // complete!\r\n            // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            key={a._id}\r\n            id={a._id}\r\n            affair={a.name}\r\n            priority={a.priority}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n\r\n        />\r\n    ))\r\n\r\n    const setAll = () => { props.setFilter('all') } // complete!\r\n    const setHigh = () => { props.setFilter('high') }\r\n    const setMiddle = () => { props.setFilter('middle') }\r\n    const setLow = () => { props.setFilter('low') }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll} className={s.btnAll}>All</button>\r\n            <button onClick={setHigh} className={s.btnHigh}>High</button>\r\n            <button onClick={setMiddle} className={s.btnMiddle}>Middle</button>\r\n            <button onClick={setLow} className={s.btnLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle' | 'all' //completed!\r\nexport type AffairType = {\r\n    _id: number,\r\n    name: string,\r\n    priority: AffairPriorityType\r\n} //completed!\r\nexport type FilterType = 'all' | AffairPriorityType\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // completed!!!\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: AffairPriorityType): Array<AffairType> => { // completed!!!\r\n\r\n\r\n    // pattern early return\r\n    if (filter === 'high') {\r\n        return affairs.filter((a: AffairType) => a.priority === 'high')\r\n    }\r\n\r\n    if (filter === 'low') {\r\n        return affairs.filter((a: AffairType) => a.priority === 'low')\r\n    }\r\n\r\n    if (filter === 'middle') {\r\n        return affairs.filter((a: AffairType) => a.priority === 'middle')\r\n    }\r\n\r\n    return affairs // if ALL\r\n}\r\n\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // completed!!!\r\n    return affairs.filter((a: AffairType) => a._id !== _id)\r\n    // need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) //  completed!!!\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) //  completed!!!\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/* completed!!!*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // completed!\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // completed!\r\n    addUser: (name:string) => void // completed!\r\n    error: string // completed!\r\n    totalUsers: number // completed!\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n\r\n    const inputClass = name === '' ? s.error : s.notError // completed!\r\n    const attention = name === '' ? 'Поле не должно быть пустым!' : ''\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n                <button className={s.btnAddName} onClick={() => addUser(name)}>add</button>\r\n                <span>{totalUsers}</span>\r\n            </div>\r\n            <small className={s.attention}>{error}</small>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType> // need to fix any\r\n    addUserCallback: (name:string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n    const [name, setName] = useState<string>('') // completed!\r\n    const [error, setError] = useState<string>('')// completed!\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // completed!\r\n        error !== '' && setError('')\r\n        setName(e.currentTarget.value) // completed!\r\n    }\r\n    const addUser = (name:string) => {\r\n        if (name){\r\n            alert(`Hello, ${name}!`) // completed!\r\n            addUserCallback(name)\r\n            setName('')\r\n        }else {\r\n            console.log('тут пусто')\r\n            setError('Поле не должно быть пустым!')\r\n        }\r\n\r\n    }\r\n\r\n    const totalUsers = users.length // completed!\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from \"uuid\";\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string // completed!\r\n    name: string// completed!\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<UserType[]>([]) // need to fix any\r\n\r\n    console.log(users)\r\n\r\n    const addUserCallback = (name: string) => { // completed!\r\n        let newUser = {_id: v1(), name: name }\r\n        let newUsers = [newUser, ...users]\r\n        setUsers(newUsers) // completed!\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\nimport {log} from \"util\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    console.log(onChange)\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        console.log(e)\r\n        onChange && onChange(e)\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        if(onChange !== undefined){\r\n            onChange(e)\r\n        }\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\r\nimport s from './HW4.module.css'\r\nimport SuperButton from './common/c2-SuperButton/SuperButton'\r\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>('')\r\n    const error = text ? '' : 'error'\r\n\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert('введите текст...')\r\n        } else {\r\n            alert(text) // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    // spanClassName={s.testSpanError}\r\n                />\r\n\r\n                <SuperInputText\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperButton>\r\n                    default\r\n                </SuperButton>\r\n\r\n                <SuperButton\r\n                    red // пропсу с булевым значением необязательно указывать true\r\n                    onClick={showAlert}\r\n                >\r\n                    delete {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n                <SuperButton disabled>\r\n                    disabled\r\n                </SuperButton>\r\n\r\n                {/*----------------------------------------------------*/}\r\n\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked}\r\n                               onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW4\r\n","import React from 'react'\r\nimport HW1 from '../../h1/HW1'\r\nimport HW2 from '../../h2/HW2'\r\nimport HW3 from '../../h3/HW3'\r\nimport HW4 from '../../h4/HW4'\r\n\r\nexport function PreJunior() {\r\n    return (\r\n        <div>\r\n            <h3>PRE JUNIOR</h3>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n            {/*<HW6/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// сделайте по аналогии пустые страницы джун и джун+\r\n// туда будут добавляться следующие дз","import React from 'react'\r\nimport {Navigate, Route, Routes} from 'react-router-dom';\r\nimport Error404 from \"./pages/Error404\";\r\nimport Junior from \"./pages/Junior\";\r\nimport JuniorPlus from \"./pages/JuniorPlus\";\r\nimport {PreJunior} from \"./pages/PreJunior\";\r\n\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: '/pre-junior',\r\n    JUNIOR: '/junior',\r\n    JUNIOR_PLUS: '/junior-plus'\r\n}\r\n\r\nfunction Rout() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n                <Route path={'/'} element={<Navigate replace to={PATH.PRE_JUNIOR}/>}/>\r\n                <Route path={PATH.PRE_JUNIOR} element={<PreJunior/>}/>\r\n                <Route path={PATH.JUNIOR} element={<Junior/>}/>\r\n                <Route path={PATH.JUNIOR_PLUS} element={<JuniorPlus/>}/>\r\n                // add routes\r\n                <Route path={'/*'} element={<Error404/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rout\r\n","import React, {useState} from 'react'\r\nimport {PATH} from \"./Rout\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './Header.module.css'\r\n\r\nfunction Header() {\r\n\r\n    const [openMenu, setOpenMenu] = useState<boolean>(false)\r\n\r\n\r\n    const onClickMenuHandler = () => {\r\n        !openMenu ? setOpenMenu(true) : setOpenMenu(false)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={s.headerMenu}\r\n             onClick={onClickMenuHandler}>\r\n            <div className={s.menuTitle}>Menu</div>\r\n\r\n            <div className={openMenu ? s.menuMainOpen : s.menuMainClose}>\r\n                <NavLink className={s.itemMenu}\r\n                         to={PATH.PRE_JUNIOR}> PreJunior </NavLink>\r\n                <NavLink className={s.itemMenu}\r\n                         to={PATH.JUNIOR}> Junior </NavLink>\r\n                <NavLink className={s.itemMenu}\r\n                         to={PATH.JUNIOR_PLUS}> Junior Plus </NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './Header'\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport Rout from \"./Rout\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <div>\r\n            {/*в gh-pages лучше работает HashRouter*/}\r\n            <Header/>\r\n            <Rout/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW5\r\n","import React from 'react'\r\nimport s from './App.module.css'\r\nimport HW1 from '../../../p2-homeworks/h1/HW1'\r\nimport HW2 from \"../../../p2-homeworks/h2/HW2\"\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\"\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <h1>React homeworks:</h1>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n            {/*<HW3/>*/}\r\n            {/*<HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport {BrowserRouter, HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <App/>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}